name: Build and Export Docker Image

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write
  actions: write

jobs:
  build-and-export:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          LLM_ENDPOINT: ${{ secrets.LLM_ENDPOINT }}
          LLM_MODEL_NAME: ${{ secrets.LLM_MODEL_NAME || 'qwen-plus' }}
          NEXT_PUBLIC_AMAP_KEY: ${{ secrets.NEXT_PUBLIC_AMAP_KEY }}
          NEXT_PUBLIC_AMAP_SECURITY_JS_CODE: ${{ secrets.NEXT_PUBLIC_AMAP_SECURITY_JS_CODE }}
          XFYUN_APP_ID: ${{ secrets.XFYUN_APP_ID }}
        run: |
          IMAGE_REPO=$(echo "ghcr.io/${{ github.repository }}/ai-travel-planner" | tr '[:upper:]' '[:lower:]')
          IMAGE_TAG=${{ github.ref_name }}
          docker build \
            --build-arg NEXT_PUBLIC_SUPABASE_URL="$NEXT_PUBLIC_SUPABASE_URL" \
            --build-arg SUPABASE_SERVICE_ROLE_KEY="$SUPABASE_SERVICE_ROLE_KEY" \
            --build-arg LLM_ENDPOINT="$LLM_ENDPOINT" \
            --build-arg LLM_MODEL_NAME="$LLM_MODEL_NAME" \
            --build-arg NEXT_PUBLIC_AMAP_KEY="$NEXT_PUBLIC_AMAP_KEY" \
            --build-arg NEXT_PUBLIC_AMAP_SECURITY_JS_CODE="$NEXT_PUBLIC_AMAP_SECURITY_JS_CODE" \
            --build-arg XFYUN_APP_ID="$XFYUN_APP_ID" \
            -t "$IMAGE_REPO:$IMAGE_TAG" .
          echo "IMAGE_REPO=$IMAGE_REPO" >> "$GITHUB_ENV"
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"

      - name: Push Docker image to GHCR
        run: docker push "$IMAGE_REPO:$IMAGE_TAG"

      - name: Export tarball artifact
        run: |
          mkdir -p dist
          docker save "$IMAGE_REPO:$IMAGE_TAG" -o "dist/ai-travel-planner-$IMAGE_TAG.tar"
          (cd dist && shasum -a 256 "ai-travel-planner-$IMAGE_TAG.tar" > "ai-travel-planner-$IMAGE_TAG.tar.sha256")

      - name: Upload tarball artifact
        uses: actions/upload-artifact@v4
        with:
          name: ai-travel-planner-${{ github.ref_name }}
          path: dist/
